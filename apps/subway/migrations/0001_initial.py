# Generated by Django 4.2.8 on 2024-03-26 03:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IteData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='编号')),
                ('alias', models.CharField(max_length=50, verbose_name='别名')),
                ('timestamp', models.DateTimeField(verbose_name='时间戳')),
                ('write_time', models.DateTimeField(verbose_name='写入时间')),
                ('wifi_time', models.DateTimeField(verbose_name='wifi时间')),
                ('freq', models.IntegerField(verbose_name='频率')),
                ('gain', models.IntegerField(verbose_name='增益')),
                ('nummeasurements', models.IntegerField(verbose_name='测量次数')),
                ('fn', models.IntegerField(verbose_name='fn')),
                ('m_type', models.CharField(max_length=50, verbose_name='m_type')),
                ('frequencyid', models.IntegerField(blank=True, null=True, verbose_name='frequencyid')),
                ('timeoffset', models.IntegerField(verbose_name='timeoffset')),
                ('cellid', models.IntegerField(verbose_name='cellid')),
                ('cfo', models.FloatField(verbose_name='cfo')),
                ('rssi', models.FloatField(verbose_name='总功率')),
                ('rsrp', models.FloatField(verbose_name='接收功率')),
                ('cir', models.FloatField(blank=True, null=True, verbose_name='cir')),
                ('rfGain', models.FloatField(blank=True, null=True, verbose_name='rfGain')),
                ('agc_cnt', models.IntegerField(verbose_name='agc_cnt')),
                ('agc_mean_power', models.FloatField(verbose_name='agc_mean_power')),
                ('mode', models.CharField(max_length=50, verbose_name='mode')),
                ('idx_5ms', models.IntegerField(verbose_name='idx_5ms')),
                ('pss_timing', models.IntegerField(verbose_name='pss_timing')),
                ('freq_offset', models.FloatField(verbose_name='freq_offset')),
                ('sinr', models.FloatField(verbose_name='信噪比')),
                ('rsrq', models.FloatField(verbose_name='信号质量')),
                ('gps_time', models.DateTimeField(blank=True, null=True, verbose_name='gps_time')),
                ('longitude', models.FloatField(verbose_name='经度')),
                ('latitude', models.FloatField(verbose_name='纬度')),
                ('ros_time', models.DateTimeField(verbose_name='ros_time')),
                ('cnt', models.IntegerField(verbose_name='cnt')),
                ('trans_time', models.DateTimeField(verbose_name='trans_time')),
            ],
            options={
                'verbose_name': 'ite数据',
                'db_table': 'tb_ite_data',
            },
        ),
        migrations.CreateModel(
            name='RunningData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='编号')),
                ('alias', models.CharField(max_length=50, verbose_name='别名')),
                ('line_name', models.CharField(max_length=50, verbose_name='线路名称')),
                ('timestamp', models.DateTimeField(verbose_name='时间戳')),
                ('write_time', models.DateTimeField(verbose_name='写入时间')),
                ('longitude', models.FloatField(verbose_name='经度')),
                ('latitude', models.FloatField(verbose_name='纬度')),
                ('station_from', models.CharField(max_length=50, verbose_name='出发站')),
                ('station_to', models.CharField(max_length=50, verbose_name='到达站')),
                ('direction', models.CharField(max_length=50, verbose_name='方向')),
                ('departure', models.CharField(max_length=50, verbose_name='发车时间')),
                ('status', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='状态')),
                ('speed', models.FloatField(verbose_name='速度')),
            ],
            options={
                'verbose_name': '运行数据',
                'db_table': 'tb_running_data',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='编号')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('longitude', models.FloatField(verbose_name='经度')),
                ('latitude', models.FloatField(verbose_name='纬度')),
                ('line_name', models.CharField(max_length=50, verbose_name='线路名称')),
            ],
            options={
                'verbose_name': '站点',
                'db_table': 'tb_station',
            },
        ),
        migrations.CreateModel(
            name='WifiData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='编号')),
                ('alias', models.CharField(max_length=50, verbose_name='别名')),
                ('timestamp', models.DateTimeField(verbose_name='时间戳')),
                ('write_time', models.DateTimeField(verbose_name='写入时间')),
                ('wifi_time', models.DateTimeField(verbose_name='wifi时间')),
                ('mac', models.CharField(max_length=50, verbose_name='mac')),
                ('channel', models.IntegerField(verbose_name='channel')),
                ('channel2', models.CharField(max_length=50, verbose_name='channel2')),
                ('ssid', models.CharField(max_length=50, verbose_name='ssid')),
                ('freq', models.IntegerField(verbose_name='freq')),
                ('level', models.IntegerField(verbose_name='level')),
                ('longitude', models.FloatField(verbose_name='经度')),
                ('latitude', models.FloatField(verbose_name='纬度')),
                ('ros_time', models.DateTimeField(blank=True, null=True, verbose_name='ros_time')),
                ('cnt', models.IntegerField(blank=True, null=True, verbose_name='cnt')),
                ('trans_time', models.DateTimeField(blank=True, null=True, verbose_name='trans_time')),
            ],
            options={
                'verbose_name': 'wifi数据',
                'db_table': 'tb_wifi_data',
            },
        ),
    ]
